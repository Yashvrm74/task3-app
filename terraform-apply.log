
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # docker_container.myapp_container[0m will be created
[0m  [32m+[0m[0m resource "docker_container" "myapp_container" {
      [32m+[0m[0m attach           = false
      [32m+[0m[0m bridge           = (known after apply)
      [32m+[0m[0m command          = (known after apply)
      [32m+[0m[0m container_logs   = (known after apply)
      [32m+[0m[0m entrypoint       = (known after apply)
      [32m+[0m[0m env              = [
          [32m+[0m[0m "APP_ENV=development",
          [32m+[0m[0m "PORT=3000",
        ]
      [32m+[0m[0m exit_code        = (known after apply)
      [32m+[0m[0m gateway          = (known after apply)
      [32m+[0m[0m hostname         = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m image            = "myapp:1.0"
      [32m+[0m[0m init             = (known after apply)
      [32m+[0m[0m ip_address       = (known after apply)
      [32m+[0m[0m ip_prefix_length = (known after apply)
      [32m+[0m[0m ipc_mode         = (known after apply)
      [32m+[0m[0m log_driver       = (known after apply)
      [32m+[0m[0m logs             = false
      [32m+[0m[0m must_run         = true
      [32m+[0m[0m name             = "terraform-myapp"
      [32m+[0m[0m network_data     = (known after apply)
      [32m+[0m[0m read_only        = false
      [32m+[0m[0m remove_volumes   = true
      [32m+[0m[0m restart          = "no"
      [32m+[0m[0m rm               = false
      [32m+[0m[0m runtime          = (known after apply)
      [32m+[0m[0m security_opts    = (known after apply)
      [32m+[0m[0m shm_size         = (known after apply)
      [32m+[0m[0m start            = true
      [32m+[0m[0m stdin_open       = false
      [32m+[0m[0m stop_signal      = (known after apply)
      [32m+[0m[0m stop_timeout     = (known after apply)
      [32m+[0m[0m tty              = false

      [32m+[0m[0m ports {
          [32m+[0m[0m external = 3000
          [32m+[0m[0m internal = 3000
          [32m+[0m[0m ip       = "0.0.0.0"
          [32m+[0m[0m protocol = "tcp"
        }

      [32m+[0m[0m volumes {
          [32m+[0m[0m container_path = "/app/data"
          [32m+[0m[0m host_path      = "/home/ubuntu/terraform-docker-app/data"
        }
    }

[1m  # docker_image.custom_image[0m will be created
[0m  [32m+[0m[0m resource "docker_image" "custom_image" {
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m latest      = (known after apply)
      [32m+[0m[0m name        = "myapp:1.0"
      [32m+[0m[0m output      = (known after apply)
      [32m+[0m[0m repo_digest = (known after apply)
    }

[1mPlan:[0m 2 to add, 0 to change, 0 to destroy.
[0m[0m[1mdocker_image.custom_image: Creating...[0m[0m
[0m[1mdocker_image.custom_image: Creation complete after 0s [id=sha256:a19086ba9c042c70ca4ab41b0f79730dd6e596d17cd42f25f4c9929293b49300myapp:1.0][0m
[0m[1mdocker_container.myapp_container: Creating...[0m[0m
[0m[1mdocker_container.myapp_container: Creation complete after 0s [id=ece1f9551657c5d9fdc6d872523299397018fa11d9d07cb94e802c9a0213d540][0m
[0m[1m[32m
Apply complete! Resources: 2 added, 0 changed, 0 destroyed.
[0m